<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Matthew Leonawicz | Blog: I think, therefore I R</title>
    <link>/post/</link>
    <description>Recent content in Posts on Matthew Leonawicz | Blog: I think, therefore I R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Matthew Leonawicz</copyright>
    <lastBuildDate>Mon, 11 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>tiler 0.2.0 CRAN release: Create map tiles from R</title>
      <link>/post/tiler-0-2-0-cran-release-create-map-tiles-from-r/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tiler-0-2-0-cran-release-create-map-tiles-from-r/</guid>
      <description>The tiler package provides a map tile-generator function for creating map tile sets for use with packages such as leaflet.
In addition to generating map tiles based on a common raster layer source, it also handles the non-geographic edge case, producing map tiles from arbitrary images. These map tiles, which have a “simple CRS”, a non-geographic simple Cartesian coordinate reference system, can also be used with leaflet when applying the simple CRS option.</description>
    </item>
    
    <item>
      <title>epubr 0.4.0 CRAN release</title>
      <link>/post/epubr-0-4-0-cran-release/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/epubr-0-4-0-cran-release/</guid>
      <description>The epubr package provides functions supporting the reading and parsing of internal e-book content from EPUB files. E-book metadata and text content are parsed separately and joined together in a tidy, nested tibble data frame.
E-book formatting is non-standard enough across all literature that no function can curate parsed e-book content across an arbitrary collection of e-books, in completely general form, resulting in a singular, consistently formatted output containing all the same variables.</description>
    </item>
    
    <item>
      <title>trekfont: Star Trek-themed fonts package</title>
      <link>/post/trekfont-star-trek-themed-fonts-package/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/trekfont-star-trek-themed-fonts-package/</guid>
      <description>trekfont is now available on CRAN. This is a simple data package that exposes 107 Star Trek font families. You might not want to use Star Trek fonts for work, but if you are making plots for fun and like Star Trek then these fonts are for you.
This post gives a basic example of one how to load these fonts in R for use in plots. Using external font files is handled by the showtext package, which uses the sysfonts package to load the fonts.</description>
    </item>
    
    <item>
      <title>tabr package for guitar tablature now on CRAN</title>
      <link>/post/tabr-package-for-guitar-tablature-now-on-cran/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tabr-package-for-guitar-tablature-now-on-cran/</guid>
      <description>The tabr package for creating guitar tablature (&amp;ldquo;tabs&amp;rdquo;) from R code is now available on CRAN. tabr provides programmatic music notation and a wrapper around LilyPond for creating quality guitar tablature.
tabr offers functions for describing and organizing musical structures and wraps around the LilyPond backend. LilyPond is an open source music engraving program for generating high quality sheet music based on markup syntax. tabr generates files following the LilyPond markup syntax to be subsequently processed by LilyPond into sheet music.</description>
    </item>
    
    <item>
      <title>Introducing tabr: guitar tabs with R</title>
      <link>/post/introducing-tabr-guitar-tabs-with-r/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/introducing-tabr-guitar-tabs-with-r/</guid>
      <description>This post introduces a new R package I am working on called tabr for creating guitar tablature (&amp;ldquo;tabs&amp;rdquo;) from R code. The tabr package provides programmatic music notation and a wrapper around LilyPond for creating quality guitar tablature.
tabr offers functions for describing and organizing musical structures and wraps around the LilyPond backend. LilyPond is an open source music engraving program for generating high quality sheet music based on markup syntax.</description>
    </item>
    
    <item>
      <title>Mix ggplot2 graphs with your favorite memes. memery 0.4.2 released.</title>
      <link>/post/2018-02-09-mix-ggplot2-graphs-with-your-favorite-memes-memery-0-4-2-on-cran/</link>
      <pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-02-09-mix-ggplot2-graphs-with-your-favorite-memes-memery-0-4-2-on-cran/</guid>
      <description>Make memorable plots with memery. memery is an R package that generates internet memes including superimposed inset graphs and other atypical features, combining the visual impact of an attention-grabbing meme with graphic results of data analysis. Version 0.4.2 of memery is now on CRAN. The latest development version and a package vignette are available on GitHub.
Changes in v0.4.2This latest version of memery includes a demo Shiny app.
library(memery)memeApp()Animated gif support is now also included (example below).</description>
    </item>
    
    <item>
      <title>Make memorable plots with memery. v0.3.0 now on CRAN.</title>
      <link>/post/2017-11-09-memery-0-3-0-on-cran/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017-11-09-memery-0-3-0-on-cran/</guid>
      <description>Make memorable plots with memery. memery is an R package that generates internet memes including superimposed inset graphs and other atypical features, combining the visual impact of an attention-grabbing meme with graphic results of data analysis. Version 0.3.0 of memery is now on CRAN. The latest development version and a package vignette are available on GitHub.
Below is an example interleaving a semi-transparent ggplot2 graph between a meme image backdrop and overlying meme text labels.</description>
    </item>
    
    <item>
      <title>apputils 0.5.0 released</title>
      <link>/post/apputils-0-5-0-released/</link>
      <pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/apputils-0-5-0-released/</guid>
      <description>Version 0.5.0 of the apputils R package has been released on GitHub. Complete documentation is available at the apputils website.
The key updates are:
 Added exApp for running Shiny app package examples. Ported custom icons demo app to apputils. Included all current custom icons in example app, adding the newer linear model themed icons. Added package css for infoBox override. Added introduction vignette content for stat boxes with package icons.</description>
    </item>
    
    <item>
      <title>Climate explorer update: monthly data and delta change</title>
      <link>/post/climate-explorer-update-monthly-data-and-delta-change/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/climate-explorer-update-monthly-data-and-delta-change/</guid>
      <description>The SNAP Climate Analytics Shiny app has been updated. Previously, the app included seasonally and annually aggregated data. With the recent inclusion of monthly data, the number of conditional spatio-temporal climate probability distributions has now increased from a base set of about 13 million unique distributions to over 46 million. The Season dropdown menu now offers annual average, 3-month seasonals, and individual months.
These conditional distributions for historical and projected temperature and precipitation over different geographic regions, time periods, climate models and greenhouse gas emissions scenarios represent the source data sets available in the app.</description>
    </item>
    
    <item>
      <title>Shiny app: Distributions of random variables</title>
      <link>/post/shiny-app-distributions-of-random-variables/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/shiny-app-distributions-of-random-variables/</guid>
      <description>There is a new version of my Distributions of Random Variables Shiny app available. This is a cleaned up modern revision of my original 2013 app series involving random variable probability distributions. The primary change is a switch to ggplot2 from base graphics. I have added this app to my shiny-apps GitHub repository so the source code is available, including a script containing all those pesky plotmath expressions.
The app draws and plots samples from various well known discrete and continuous probability distributions, all of which are available in base R with the single exception of the Pareto distribution.</description>
    </item>
    
    <item>
      <title>Assorted Shiny apps collection, full code and data</title>
      <link>/post/2017-04-26-assorted-shiny-apps/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017-04-26-assorted-shiny-apps/</guid>
      <description>Here is an assortment of R Shiny apps that you may find useful for exploration if you are in the process of learning Shiny and looking for something different. Some of these apps are very small and simple whereas others are large and complex. This repository provides full code and any necessary accompanying data sets. The repo also links to the apps hosted online at shinyapps.io so that you can run apps in your browser without having to download the entire collection repo to run apps locally.</description>
    </item>
    
    <item>
      <title>Custom images for Shiny dashboard valueBox icons</title>
      <link>/post/custom-images-for-shiny-dashboard-valuebox-icons/</link>
      <pubDate>Wed, 11 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/custom-images-for-shiny-dashboard-valuebox-icons/</guid>
      <description>The shinydashboard package provides functions like valueBox that conveniently display basic information like summary statistics. In addition to presenting a value and subtitle on a colored background, an icon may be included as well. However, the icon must come from either the Font Awesome or Glyphicon icon libraries and cannot be image files.
I&amp;rsquo;ve provided a gist that shows how to achieve the use of custom icons with local image files stored in an app&amp;rsquo;s www/ directory.</description>
    </item>
    
    <item>
      <title>mapmate 0.2.0</title>
      <link>/post/mapmate-0-2-0/</link>
      <pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/mapmate-0-2-0/</guid>
      <description>mapmate is under development and blog posts can become outdated quickly. Up to date mapmate documentation and tutorial examples can be found at the official mapmate Github pages.
mapmate has now been updating from version 0.1.0 to 0.2.0 on Github. The key change is the incorporation of new functions, help docs and code examples focused on network maps, which is a more complex map type not previously covered. The new tutorial content below provides a a couple basic code examples for making network maps with mapmate.</description>
    </item>
    
    <item>
      <title>R animation: global climate change</title>
      <link>/post/r-animation-global-climate-change/</link>
      <pubDate>Thu, 29 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/r-animation-global-climate-change/</guid>
      <description>I have posted a new R data animation video. It&amp;rsquo;s an example animation of modeled historical and projected global temperature change from 1850 - 2100. The data prep, analysis, full processing and generation of all sets of still frames for each layer in the video are done using R.
  Typically an ensemble of models would be used but this video is just to demonstrate a basic animation using one climate model, both with a monthly time series and a monthly 10-year moving average time series.</description>
    </item>
    
    <item>
      <title>R animation: global SNAP Shiny app users</title>
      <link>/post/r-animation-global-snap-shiny-app-users/</link>
      <pubDate>Fri, 25 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/r-animation-global-snap-shiny-app-users/</guid>
      <description>For the blog readers, just a quick heads up that I have posted a new R data animation to YouTube. A complete post will follow, but for now here is the video. It displays the social network of SNAP Shiny app users over about the past year and a half using great circle trajectories on a rotating 3D Earth. It&amp;rsquo;s best in 1080p, but still somewhat degraded for streaming. I&amp;rsquo;ll post the raw source video later as well, which is crystal clear.</description>
    </item>
    
    <item>
      <title>R animation: great circles 3, final draft</title>
      <link>/post/r-animation-great-circles-3/</link>
      <pubDate>Fri, 04 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/r-animation-great-circles-3/</guid>
      <description>Here is the final draft of my great circle arcs R animation. I made this back in January shortly after my first two drafts, but am only now getting around to sharing it, which is a typical representation of how seldom I can make time for blogging. But given the recent spike in interest (thanks to Urban Demographics for sharing my work) in the first, and roughest, draft, I am motivated to finally share something better.</description>
    </item>
    
  </channel>
</rss>